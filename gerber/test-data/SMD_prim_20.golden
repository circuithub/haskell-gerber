[ G04 " Generated by UcamX v2017.04-170404 on 2017.4.7"
, G04 " Ucamco copyright"
, IngoredAttributeTF
    "GenerationSoftware,Ucamco,UcamX,v2017.04-170404"
, IngoredAttributeTF "CreationDate,2017-04-18T10:09:12+00:00"
, IngoredAttributeTF "FileFunction,Other,SMD prim20"
, IngoredAttributeTF "FilePolarity,Positive"
, FS
    PadLeading
    Format { integerPositions = 4 , decimalPositions = 6 }
    Format { integerPositions = 4 , decimalPositions = 6 }
, MO MM
, G01
, G04 " Create aperture macro"
, AM
    "RECTROUNDCORNERS"
    [ Comment " Rectangle with rounded corners"
    , Comment " $1 width "
    , Comment " $2 height "
    , Comment " $3 corner radius "
    , Comment " $4 flash origin X offset "
    , Comment " $5 flash origin Y offset "
    , Comment " $6 rotation angle "
    , Comment
        " Create two overlapping rectangles that omit the rounded corner areas"
    , Primitive
        (VectorLine
           VectorLineModifiers
             { vectorLineExposure = Decimal 1.0
             , vectorLineWidth =
                 Minus
                   (VariableReference 2)
                   (Multiply (Decimal 2.0) (VariableReference 3))
             , start =
                 V2
                   (Minus
                      (VariableReference 4) (Divide (VariableReference 1) (Decimal 2.0)))
                   (VariableReference 5)
             , end =
                 V2
                   (Plus
                      (VariableReference 4) (Divide (VariableReference 1) (Decimal 2.0)))
                   (VariableReference 5)
             , vectorLineRotation = VariableReference 6
             })
    , Primitive
        (VectorLine
           VectorLineModifiers
             { vectorLineExposure = Decimal 1.0
             , vectorLineWidth = VariableReference 2
             , start =
                 V2
                   (VariableReference 4)
                   (Minus
                      (VariableReference 5) (Divide (VariableReference 2) (Decimal 2.0)))
             , end =
                 V2
                   (VariableReference 4)
                   (Plus
                      (VariableReference 5) (Divide (VariableReference 2) (Decimal 2.0)))
             , vectorLineRotation = VariableReference 6
             })
    , Comment " Add circles at the corners. "
    , Primitive
        (Circle
           CircleModifiers
             { circleExposure = Decimal 1.0
             , diameter = Multiply (Decimal 2.0) (VariableReference 3)
             , circleCenter =
                 V2
                   (Plus
                      (VariableReference 4)
                      (Minus
                         (Divide (VariableReference 1) (Decimal 2.0))
                         (VariableReference 3)))
                   (Plus
                      (VariableReference 5)
                      (Minus
                         (Divide (VariableReference 2) (Decimal 2.0))
                         (VariableReference 3)))
             , circleRotation = Just (VariableReference 6)
             })
    , Primitive
        (Circle
           CircleModifiers
             { circleExposure = Decimal 1.0
             , diameter = Multiply (Decimal 2.0) (VariableReference 3)
             , circleCenter =
                 V2
                   (Plus
                      (Minus
                         (VariableReference 4) (Divide (VariableReference 1) (Decimal 2.0)))
                      (VariableReference 3))
                   (Plus
                      (VariableReference 5)
                      (Minus
                         (Divide (VariableReference 2) (Decimal 2.0))
                         (VariableReference 3)))
             , circleRotation = Just (VariableReference 6)
             })
    , Primitive
        (Circle
           CircleModifiers
             { circleExposure = Decimal 1.0
             , diameter = Multiply (Decimal 2.0) (VariableReference 3)
             , circleCenter =
                 V2
                   (Plus
                      (Minus
                         (VariableReference 4) (Divide (VariableReference 1) (Decimal 2.0)))
                      (VariableReference 3))
                   (Plus
                      (Minus
                         (VariableReference 5) (Divide (VariableReference 2) (Decimal 2.0)))
                      (VariableReference 3))
             , circleRotation = Just (VariableReference 6)
             })
    , Primitive
        (Circle
           CircleModifiers
             { circleExposure = Decimal 1.0
             , diameter = Multiply (Decimal 2.0) (VariableReference 3)
             , circleCenter =
                 V2
                   (Plus
                      (VariableReference 4)
                      (Minus
                         (Divide (VariableReference 1) (Decimal 2.0))
                         (VariableReference 3)))
                   (Plus
                      (Minus
                         (VariableReference 5) (Divide (VariableReference 2) (Decimal 2.0)))
                      (VariableReference 3))
             , circleRotation = Just (VariableReference 6)
             })
    ]
, G04 " Create aperture"
, MacroAD
    10 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 0.0 , 0.0 , 0.0 ]
, MacroAD
    11 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 0.0 , 0.0 , 10.0 ]
, MacroAD
    12 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 0.0 , 0.0 , 30.0 ]
, MacroAD
    13 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 0.0 , 0.0 , 45.0 ]
, MacroAD
    20 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 1.0 , 2.0 , 0.0 ]
, MacroAD
    21 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 1.0 , 2.0 , 10.0 ]
, MacroAD
    22 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 1.0 , 2.0 , 30.0 ]
, MacroAD
    23 "RECTROUNDCORNERS" [ 4.0 , 3.0 , 0.5 , 1.0 , 2.0 , 45.0 ]
, G04 " Select aperture"
, D 10
, G04 " Flash aperture"
, D03
    Movement
      { x = Just EncodedDecimal { negative = False , digits = [ 0 ] }
      , y = Just EncodedDecimal { negative = False , digits = [ 0 ] }
      , i = Nothing
      , j = Nothing
      }
, D 11
, D03
    Movement
      { x =
          Just
            EncodedDecimal
              { negative = False , digits = [ 6 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , y = Nothing
      , i = Nothing
      , j = Nothing
      }
, D 12
, D03
    Movement
      { x =
          Just
            EncodedDecimal
              { negative = False , digits = [ 1 , 2 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , y = Nothing
      , i = Nothing
      , j = Nothing
      }
, D 13
, D03
    Movement
      { x =
          Just
            EncodedDecimal
              { negative = False , digits = [ 1 , 8 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , y = Nothing
      , i = Nothing
      , j = Nothing
      }
, D 20
, D03
    Movement
      { x = Just EncodedDecimal { negative = False , digits = [ 0 ] }
      , y =
          Just
            EncodedDecimal
              { negative = False , digits = [ 5 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , i = Nothing
      , j = Nothing
      }
, D 21
, D03
    Movement
      { x =
          Just
            EncodedDecimal
              { negative = False , digits = [ 6 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , y =
          Just
            EncodedDecimal
              { negative = False , digits = [ 5 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , i = Nothing
      , j = Nothing
      }
, D 22
, D03
    Movement
      { x =
          Just
            EncodedDecimal
              { negative = False , digits = [ 1 , 2 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , y = Nothing
      , i = Nothing
      , j = Nothing
      }
, D 23
, D03
    Movement
      { x =
          Just
            EncodedDecimal
              { negative = False , digits = [ 1 , 8 , 0 , 0 , 0 , 0 , 0 , 0 ] }
      , y = Nothing
      , i = Nothing
      , j = Nothing
      }
, IngoredAttributeTF "MD5,2A4CB336BBB01B553283D651B0C6E89A"
, M02
]